namespace auth

include std/datetime.e
include std/map.e
include std/regex.e
include lib/blog/web/session.exu

map:map account = new_from_kvpairs({
    {"admin", "test"}
})

global function check()
    object cookie = getenv("HTTP_COOKIE")
    if atom(cookie) then
        return 0
    end if

    sequence session_key = regex:find_replace(
        regex:new(`.*session=([^;]+).*`), cookie, `\1`)

    return session:read(session_key)
end function

global function login(sequence user_name, sequence password)
    if atom(map:get(account, user_name)) then
        return 0
    end if
    if (match(map:get(account, user_name), password) != 1)
        or (match(password, map:get(account, user_name)) != 1) then
        return 0
    end if

    sequence new_session_key = sprintf("%d", rand(9999999))
    session:set(new_session_key, user_name)
    sequence expire = datetime:format(
        datetime:add(datetime:now_gmt(), 1, WEEKS),
        "%a, %d-%b-%Y %H:%M:%S GMT")

    return {new_session_key, expire}
end function
