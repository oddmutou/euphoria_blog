namespace main_controller
include std/convert.e
include std/map.e
include std/sequence.e
include lib/blog/article.exu
include lib/blog/template.exu
include lib/blog/web/response.exu

global procedure view(map params)
    atom id = convert:to_integer(map:get(params, "id"))
    object data = article:get_from_id(id)

    if atom(data) then
        unknown_action(params)
        abort(1)
    end if

    map template_params = new_from_kvpairs({
        {"body", data[2]},
        {"page_title", data[1] & " - Blog"},
        {"title", data[1]}

    })

    response:create(200, "utf-8", template:process("view/main/article.html", template_params))
end procedure

global procedure index(map params)
    sequence ids = article:get_all_ids()

    sequence str_ids = {}
    for i = 1 to length(ids) do
        str_ids = append(str_ids, convert:to_string(ids[i]))
    end for

    map template_params = new_from_kvpairs({
        {"article_numbers", str_ids},
        {"page_title", "Blog"}
    })

    response:create(200, "utf-8", template:process("view/main/index.html", template_params))
end procedure

global procedure unknown_action(map params)
    response:create(404, "utf-8", "Not Found")
end procedure
